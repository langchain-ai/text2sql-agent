name: Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for pre-commit hooks

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: |
          .uv/cache
          .venv
        key: ${{ runner.os }}-uv-quality-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-quality-

    - name: Install dependencies
      run: uv sync

    - name: Run Linting and Formatting Checks
      run: make lint

    - name: Run Type Checking
      run: make type-check

    - name: Run Pre-Commit Hooks
      run: make pre-commit

    - name: Comment PR with quality check results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { exitCode } = process;
          const status = exitCode === 0 ? '✅' : '❌';
          const message = exitCode === 0
            ? 'All quality checks passed!'
            : 'Quality checks failed. Please fix the issues above.';

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Quality Checks ${status}\n\n${message}`
          });
